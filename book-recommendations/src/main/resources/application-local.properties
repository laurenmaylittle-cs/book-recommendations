management.health.db.enabled=false
# tells spring not to create tables automatically (we will be using flyway for this)
spring.jpa.hibernate.ddl-auto=none
#database config (how to connect to the DB, login, password, etc)
spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=dev
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
#flyway configuration
spring.flyway.user=postgres
spring.flyway.password=dev
spring.flyway.url=jdbc:postgresql://localhost:5432/postgres
spring.flyway.out-of-order=true
# set this to true so we can see the sql that spring generates (you can change this to false if you want)
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.banner.location=classpath:banner.txt
branding.service.name=BestReads
##Google Books API
googlebooks.api.uri=https://www.googleapis.com/books/v1
googlebooks.api.key=${google_books_api_key}
# nytimes API
nytimes.api.uri=https://api.nytimes.com/svc/books/v3
nytimes.api.key=${nytimes_api_key}
#auth0 API
auth0.api-uri=https://bestreads.eu.auth0.com/api/v2
auth0.client-id=${client_id}
auth0.client-secret=${client_secret}
#Placeholder book thumbnail
book.placeholder.url=https://play-lh.googleusercontent.com/_tslXR7zUXgzpiZI9t70ywHqWAxwMi8LLSfx8Ab4Mq4NUTHMjFNxVMwTM1G0Q-XNU80
#auth0
auth0.audience=https://bestreads/api
auth0.audience-for-users=https://bestreads.eu.auth0.com
spring.security.oauth2.resourceserver.jwt.issuer-uri=https://bestreads.eu.auth0.com/
#aws personalize
AWS_CAMPAIGN_ARN=${AWS_CAMPAIGN_ARN}
AWS_REGION=${AWS_REGION}
AWS_EVENT_TRACKER_ID=${AWS_EVENT_TRACKER_ID}
AWS_BOOKS_DATASET_ARN=${AWS_BOOKS_DATASET_ARN}
AWS_USERS_DATASET_ARN=${AWS_USERS_DATASET_ARN}